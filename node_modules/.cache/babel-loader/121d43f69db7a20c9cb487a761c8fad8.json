{"ast":null,"code":"import _classCallCheck from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ch4rly/Documents/code/spot/src/components/connected_snackbar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\nvar letiantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nvar styles1 = function styles1(theme) {\n  return {\n    success: {\n      backgroundColor: green[600],\n      bottom: '200px'\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconletiant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n};\n\nfunction MySnackbarContent(props) {\n  var classes = props.classes,\n      className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      letiant = props.letiant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"message\", \"onClose\", \"letiant\"]);\n\n  var Icon = letiantIcon[letiant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: classNames(classes[letiant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classNames(classes.icon, classes.iconletiant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), message)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  letiant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nvar MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nvar styles2 = function styles2(theme) {\n  return {\n    margin: {\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar ConnectedSnackBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectedSnackBar, _React$Component);\n\n  function ConnectedSnackBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConnectedSnackBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConnectedSnackBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.props = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(ConnectedSnackBar, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        className: \"snackBar\",\n        open: this.props.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(MySnackbarContentWrapper, {\n        onClose: this.handleClose,\n        letiant: \"success\",\n        message: \"Connected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ConnectedSnackBar;\n}(React.Component);\n\nConnectedSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles2)(ConnectedSnackBar);","map":{"version":3,"sources":["/Users/ch4rly/Documents/code/spot/src/components/connected_snackbar.jsx"],"names":["React","PropTypes","classNames","CheckCircleIcon","ErrorIcon","InfoIcon","green","amber","Snackbar","SnackbarContent","WarningIcon","withStyles","letiantIcon","success","warning","error","info","styles1","theme","backgroundColor","bottom","palette","dark","primary","icon","fontSize","iconletiant","opacity","marginRight","spacing","unit","message","display","alignItems","MySnackbarContent","props","classes","className","onClose","letiant","other","Icon","propTypes","object","isRequired","string","node","func","oneOf","MySnackbarContentWrapper","styles2","margin","ConnectedSnackBar","open","vertical","horizontal","handleClose","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst letiantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600],\n    bottom: '200px'\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconletiant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, letiant, ...other } = props;\n  const Icon = letiantIcon[letiant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[letiant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconletiant)} />\n          {message}\n        </span>\n      }\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  letiant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass ConnectedSnackBar extends React.Component {\n  props = {\n    open: false,\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div >\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          className=\"snackBar\"\n          open={this.props.open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.handleClose}\n            letiant=\"success\"\n            message=\"Connected\"\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nConnectedSnackBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles2)(ConnectedSnackBar);\n"]},"metadata":{},"sourceType":"module"}