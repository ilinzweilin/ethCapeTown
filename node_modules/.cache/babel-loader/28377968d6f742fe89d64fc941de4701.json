{"ast":null,"code":"import _classCallCheck from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ch4rly/Documents/code/spot/src/components/networks_list.jsx\";\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport NetworkToggle from \"./toggle_on\";\nimport Button from '@material-ui/core/Button';\n\nvar NetworksList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NetworksList, _Component);\n\n  function NetworksList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NetworksList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NetworksList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.props = {\n      networks: [],\n      connectedNetwork: undefined,\n      connectToNetwork: {},\n      disconnectFromNetwork: {},\n      kBytesConsumed: 0,\n      moneySpent: 0\n    };\n    _this.state = {\n      connected: false\n    };\n    return _this;\n  }\n\n  _createClass(NetworksList, [{\n    key: \"showNetworksList\",\n    value: function showNetworksList() {\n      var _this$props = this.props,\n          networks = _this$props.networks,\n          connectedNetwork = _this$props.connectedNetwork,\n          connectToNetwork = _this$props.connectToNetwork,\n          disconnectFromNetwork = _this$props.disconnectFromNetwork,\n          kBytesConsumed = _this$props.kBytesConsumed;\n      return React.createElement(\"div\", {\n        className: \"mainContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"paymentInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Pay .001 ETC / 100 Kbyte\"), React.createElement(\"div\", {\n        className: \"networkList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, networks.map(function (network, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: network.ssid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), connectedNetwork && connectedNetwork === network.mac && React.createElement(Typography, {\n          className: \"dataConsumption\",\n          primary: \"\".concat(kBytesConsumed, \" kBytes\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"\".concat(kBytesConsumed, \" kBytes\")), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(NetworkToggle, {\n          connectToNetwork: connectToNetwork,\n          disconnectFromNetwork: disconnectFromNetwork,\n          networkId: network.mac,\n          disabled: connectedNetwork && connectedNetwork !== network.mac,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        })));\n      })));\n    }\n  }, {\n    key: \"showDataStats\",\n    value: function showDataStats() {\n      return React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Connected\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.connected) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, this.showNetworksList());\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, this.showDataStats());\n      }\n    }\n  }]);\n\n  return NetworksList;\n}(Component);\n\nexport { NetworksList as default };","map":{"version":3,"sources":["/Users/ch4rly/Documents/code/spot/src/components/networks_list.jsx"],"names":["React","Component","Grid","Typography","ListItem","ListItemSecondaryAction","ListItemText","NetworkToggle","Button","NetworksList","props","networks","connectedNetwork","undefined","connectToNetwork","disconnectFromNetwork","kBytesConsumed","moneySpent","state","connected","map","network","i","ssid","mac","showNetworksList","showDataStats"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEqBC,Y;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,gBAAgB,EAAEC,SAFd;AAGJC,MAAAA,gBAAgB,EAAE,EAHd;AAIJC,MAAAA,qBAAqB,EAAE,EAJnB;AAKJC,MAAAA,cAAc,EAAE,CALZ;AAMJC,MAAAA,UAAU,EAAE;AANR,K;UAQRC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;;;;;uCAIW;AAAA,wBAC+E,KAAKT,KADpF;AAAA,UACTC,QADS,eACTA,QADS;AAAA,UACCC,gBADD,eACCA,gBADD;AAAA,UACmBE,gBADnB,eACmBA,gBADnB;AAAA,UACqCC,qBADrC,eACqCA,qBADrC;AAAA,UAC4DC,cAD5D,eAC4DA,cAD5D;AAEf,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAIE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIL,QAAQ,CAACS,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;AAAA,eACX,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAED,OAAO,CAACE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIKX,gBAAgB,IAAIA,gBAAgB,KAAKS,OAAO,CAACG,GAAlD,IACA,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAE,iBAAvB;AAAyC,UAAA,OAAO,YAAKR,cAAL,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIA,cADJ,aALJ,EAWE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AAAe,UAAA,gBAAgB,EAAIF,gBAAnC;AAAqD,UAAA,qBAAqB,EAAIC,qBAA9E;AAAqG,UAAA,SAAS,EAAEM,OAAO,CAACG,GAAxH;AAA6H,UAAA,QAAQ,EAAEZ,gBAAgB,IAAIA,gBAAgB,KAAKS,OAAO,CAACG,GAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAXF,CADW;AAAA,OAAb,CAFJ,CAJF,CADF;AA4BH;;;oCACe;AACd,aAAS,oBAAC,MAAD;AAAS,QAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAT;AAID;;;6BAEQ;AACP,UAAI,CAAC,KAAKN,KAAL,CAAWC,SAAhB,EAA2B;AACvB,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,KAAKM,gBAAL,EADN,CADH;AAKH,OAND,MAMO;AACH,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,KAAKC,aAAL,EADN,CADJ;AAKH;AACF;;;;EAlEuCzB,S;;SAArBQ,Y","sourcesContent":["import React, { Component } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport NetworkToggle from \"./toggle_on\"\nimport Button from '@material-ui/core/Button'\n\nexport default class NetworksList extends Component {\n\n  props = {\n      networks: [],\n      connectedNetwork: undefined,\n      connectToNetwork: {},\n      disconnectFromNetwork: {},\n      kBytesConsumed: 0,\n      moneySpent: 0\n  }\n  state = {\n      connected: false\n  }\n\n  showNetworksList() {\n    const { networks, connectedNetwork, connectToNetwork, disconnectFromNetwork, kBytesConsumed } = this.props\n      return (\n        <div className=\"mainContent\" >\n          <Typography className=\"paymentInfo\">\n          Pay .001 ETC / 100 Kbyte \n          </Typography>\n          <div className=\"networkList\">\n            {\n              networks.map((network, i) => (\n                <ListItem key={i}>\n                  <ListItemText primary={network.ssid} /> \n                  \n                  {\n                    (connectedNetwork && connectedNetwork === network.mac) && (\n                    <Typography className =\"dataConsumption\" primary={`${kBytesConsumed} kBytes`}> \n                    {`${kBytesConsumed} kBytes`}\n                    </Typography>\n                    )\n                  }\n\n                  <ListItemSecondaryAction>\n                    <NetworkToggle connectToNetwork = {connectToNetwork} disconnectFromNetwork = {disconnectFromNetwork} networkId={network.mac} disabled={connectedNetwork && connectedNetwork !== network.mac}/>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))\n            }\n          </div>\n        </div>\n      )\n  }\n  showDataStats() {\n    return ( <Button  color=\"primary\">\n       Connected\n      </Button>\n    )\n  }\n\n  render() {\n    if (!this.state.connected) {\n        return (\n           <div>\n               { this.showNetworksList() }\n           </div> \n        )\n    } else {\n        return (\n            <div>\n                { this.showDataStats() }\n            </div> \n         )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}