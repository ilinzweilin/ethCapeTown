{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ch4rly/Documents/code/spot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar axios = require('axios');\n\nvar tokenAddress = \"partner\";\nvar partnerAddress = \"token\";\nexport function openPaymentChannel(_x, _x2, _x3, _x4) {\n  return _openPaymentChannel.apply(this, arguments);\n}\n\nfunction _openPaymentChannel() {\n  _openPaymentChannel = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(partnerAddress, tokenAddress, totalDeposit, settleTimeout) {\n    var req;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.put('http://localhost:5001/api/v1/channels', {\n              partner_address: partnerAddress,\n              token_address: tokenAddress,\n              total_deposit: totalDeposit,\n              settle_timeout: settleTimeout\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 3:\n            req = _context.sent;\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return _openPaymentChannel.apply(this, arguments);\n}\n\nexport function joinTokenNetwork() {\n  return _joinTokenNetwork.apply(this, arguments);\n}\n\nfunction _joinTokenNetwork() {\n  _joinTokenNetwork = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.put('http://localhost:5001/api/v1/connections/0x396764f15ed1467883A9a5B7D42AcFb788CD1826', {\n              funds: 20\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            res = _context2.sent;\n            onsole.log('joined nework', res);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _joinTokenNetwork.apply(this, arguments);\n}\n\nexport function getExistingPartners() {\n  return _getExistingPartners.apply(this, arguments);\n}\n\nfunction _getExistingPartners() {\n  _getExistingPartners = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get('http://localhost:5001/api/v1/channels/0x396764f15ed1467883A9a5B7D42AcFb788CD1826', {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getExistingPartners.apply(this, arguments);\n}\n\nexport function reopenPaymentChannel(_x5, _x6) {\n  return _reopenPaymentChannel.apply(this, arguments);\n}\n\nfunction _reopenPaymentChannel() {\n  _reopenPaymentChannel = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(partnerAddress, tokenAddress) {\n    var req;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios.patch(\"http://localhost:5001/api/v1/channels/\".concat(tokenAddress, \"/\").concat(partnerAddress), {\n              state: 'opened'\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            req = _context4.sent;\n            console.log(\"payment channel closed\", req);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _reopenPaymentChannel.apply(this, arguments);\n}\n\nexport function closePaymentChannel(_x7, _x8) {\n  return _closePaymentChannel.apply(this, arguments);\n}\n\nfunction _closePaymentChannel() {\n  _closePaymentChannel = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(partnerAddress, tokenAddress) {\n    var req;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return axios.patch(\"http://localhost:5001/api/v1/channels/\".concat(tokenAddress, \"/\").concat(partnerAddress), {\n              state: 'closed'\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            req = _context5.sent;\n            console.log(\"payment channel closed\", req);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _closePaymentChannel.apply(this, arguments);\n}\n\nexport function leaveTokenNetwork(_x9) {\n  return _leaveTokenNetwork.apply(this, arguments);\n}\n\nfunction _leaveTokenNetwork() {\n  _leaveTokenNetwork = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(tokenAddress) {\n    var req;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return axios.delete(\"http://localhost:5001/api/v1/connections/\".concat(tokenAddress), {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            req = _context6.sent;\n            console.log(\"network left\", req);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _leaveTokenNetwork.apply(this, arguments);\n}\n\nexport function submitPayment(_x10, _x11, _x12) {\n  return _submitPayment.apply(this, arguments);\n}\n\nfunction _submitPayment() {\n  _submitPayment = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(partnerAddress, tokenAddress, amount) {\n    var req;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return axios.post(\"http://localhost:5001/api/v1/payments/\".concat(tokenAddress, \"/\").concat(partnerAddress), {\n              amount: amount\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            req = _context7.sent;\n            console.log(\"payment sent\", req);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _submitPayment.apply(this, arguments);\n}\n\nexport function addPaymentInformation(elements) {\n  elements.forEach(function (element) {\n    element.tokenAddress = tokenAddress;\n    element.partnerAddress = partnerAddress;\n  });\n}","map":{"version":3,"sources":["/Users/ch4rly/Documents/code/spot/src/helpers/payment.js"],"names":["axios","require","tokenAddress","partnerAddress","openPaymentChannel","totalDeposit","settleTimeout","put","partner_address","token_address","total_deposit","settle_timeout","headers","req","joinTokenNetwork","funds","res","onsole","log","getExistingPartners","get","reopenPaymentChannel","patch","state","console","closePaymentChannel","leaveTokenNetwork","delete","submitPayment","amount","post","addPaymentInformation","elements","forEach","element"],"mappings":"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","sourcesContent":["let axios = require('axios')\n\nconst tokenAddress = \"partner\"\nconst partnerAddress = \"token\"\n\nexport async function openPaymentChannel(partnerAddress, tokenAddress, totalDeposit, settleTimeout) {\ntry {\n  const req = await axios.put(\n    'http://localhost:5001/api/v1/channels',\n    {\n      partner_address: partnerAddress,\n      token_address: tokenAddress,\n      total_deposit: totalDeposit,\n      settle_timeout: settleTimeout\n    },\n    {\n      headers: { 'Content-Type': 'application/json' },\n    }\n  )} catch(err) {\n  }\n}\n\n\nexport async function joinTokenNetwork() {\n  const res = await axios.put(\n    'http://localhost:5001/api/v1/connections/0x396764f15ed1467883A9a5B7D42AcFb788CD1826',\n    {\n      funds: 20\n    },\n    {\n      headers: { 'Content-Type': 'application/json' },\n    }\n  )\n  onsole.log('joined nework', res)\n}\n\nexport async function getExistingPartners() {\n  const res = await axios.get(\n    'http://localhost:5001/api/v1/channels/0x396764f15ed1467883A9a5B7D42AcFb788CD1826',\n    {\n      headers: { 'Content-Type': 'application/json' },\n    }\n  )\n  return res\n}\n\n\nexport async function reopenPaymentChannel(partnerAddress, tokenAddress) {\n  const req = await axios.patch(\n    `http://localhost:5001/api/v1/channels/${tokenAddress}/${partnerAddress}`,\n    {\n      state: 'opened'\n    },\n    {\n      headers: { 'Content-Type': 'application/json' },\n    }\n  )\n  console.log(\"payment channel closed\", req)\n}\n\nexport async function closePaymentChannel(partnerAddress, tokenAddress) {\n  const req = await axios.patch(\n    `http://localhost:5001/api/v1/channels/${tokenAddress}/${partnerAddress}`,\n    {\n      state: 'closed'\n    },\n    {\n      headers: { 'Content-Type': 'application/json' },\n    }\n  )\n  console.log(\"payment channel closed\", req)\n}\n\nexport async function leaveTokenNetwork(tokenAddress) {\n  const req = await axios.delete(\n    `http://localhost:5001/api/v1/connections/${tokenAddress}`,\n    {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  console.log(\"network left\", req)\n}\n\nexport async function submitPayment(partnerAddress, tokenAddress, amount) {\n  const req = await axios.post(\n    `http://localhost:5001/api/v1/payments/${tokenAddress}/${partnerAddress}`,\n    {\n      amount\n    },\n    {\n      headers: { 'Content-Type': 'application/json' },\n    })\n  console.log(\"payment sent\", req)\n}\n\nexport function addPaymentInformation (elements) {\n  elements.forEach( element => {\n    element.tokenAddress = tokenAddress\n    element.partnerAddress = partnerAddress  \n  })\n}\n"]},"metadata":{},"sourceType":"module"}